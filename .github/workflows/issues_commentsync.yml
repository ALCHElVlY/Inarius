name: Sync Issue Comments

on:
  issue_comment:
    types: [created]

jobs:
  check_duplicate:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      PRIVATE_REPO_NAME: ${{ secrets.INARIUS_PRIVATE_REPO }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for duplicate issues
        run: |
          private_repo=$(echo "${{ env.PRIVATE_REPO_NAME }}" | sed 's/"/\\"/g')
          issue_number=$(jq --raw-output '.issue.number' "$GITHUB_EVENT_PATH")
          private_comment=$(jq --raw-output '.comment.body | gsub("\""; "\\\"")' "$GITHUB_EVENT_PATH")
          results=$(gh --repo "$private_repo" issue comment list "$issue_number" | jq -r '.[].body' | grep -Fx "$private_comment")
          if [[ -z "$results" ]]; then
            echo "No comment found in private repository"
            exit 0
          fi
          if [[ -n "$results" ]]; then
            echo "Existing comment found in private repository, skipping sync.."
            exit 1
          fi

  sync_comment:
    runs-on: ubuntu-latest
    needs: check_duplicate
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      PRIVATE_REPO_NAME: ${{ secrets.INARIUS_PRIVATE_REPO }}
    steps:
      - name: Checkout Public Repo
        uses: actions/checkout@v2
        with:
          repository: ALCHElVlY/Inarius
      - name: Checkout Private Repo
        uses: actions/checkout@v2
        with:
          repository: ${{ env.PRIVATE_REPO_NAME }}
          token: ${{ env.GH_TOKEN }}
      - name: Sync Public to Private
        run: |
          public_title=$(echo "${{ github.event.issue.title }}" | sed 's/"/\\"/g')
          private_url=$(gh api -X GET "repos/${{ env.PRIVATE_REPO_NAME }}/issues?state=open" | jq -r '.[] | select(.title=="'"$public_title"'") | .url')
          private_comment=$(echo "${{ github.event.comment.body }}" | sed 's/"/\\"/g')
          echo "Syncing comment from public to private..."
          gh api "$private_url" -f body="$private_comment"
